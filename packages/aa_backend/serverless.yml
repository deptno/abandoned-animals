service:
  name: aa-backend

provider:
  name: aws
  profile: aa
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-2'}
  runtime: nodejs12.x
  memorySize: 128
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource: "arn:aws:dynamodb:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:GetBucketLocation
        - s3:ListBucket
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
        - s3:AbortMultipartUpload
        - s3:CreateBucket
      Resource: "arn:aws:s3:::*"
  environment: ${file(./environment.yml):${self:provider.stage}}

package:
  indivisually: true

plugins:
  - serverless-jetpack
  - serverless-webpack

functions:
  graphql:
    description: GraphQL
    handler: handler/graphql.handler
    events:
      - http:
          path: /graphql
          method: post
          cors:
            origin: '*'
            maxAge: 86400
      - http:
          path: /graphql
          method: get
